package ru.rkapp.methods;

import ru.rkapp.ButcherTableMethod;
import ru.rkapp.RightCalculator;

/**
 * Метод Дорманда-Принса 5(4)-го порядка (DOPRI54).
 * 
 * Dormand–Prince 5(4) method (DOPRI54).
 * 
 * c = [1/5, 3/10, 4/5, 8/9, 1.0, 1.0]
 * A = [
 *   1/5, 
 *   3/40, 9/40, 
 *   44/45, -56/15, 32/9, 
 *   19372/6561, -25360/2187, 64448/6561, -212/729,
 *   9017/3168, -355/33, 46732/5247, 49/176, -5103/18656,
 *   35/384, 0, 500/1113, 125/192, -2187/6784, 11/84
 * ]
 * 
 * Для 5-го порядка:
 *   b = [5179/57600, 0, 7571/16695, 393/640, -92097/339200, 187/2100, 1/40]
 * Для 4-го порядка:
 *   b = [35/384, 0, 500/1113, 125/192, -2187/6784, 11/84, 0]
 */
public class DOPRI5 extends ButcherTableMethod {
    private static final double[] C = {
        1.0/5, 3.0/10, 4.0/5, 8.0/9, 1.0, 1.0
    };
    
    // Коэффициенты для 5-го порядка
    private static final double[] B5 = {
        5179.0/57600, 0.0, 7571.0/16695, 
        393.0/640, -92097.0/339200, 187.0/2100, 1.0/40
    };
    
    // Коэффициенты для 4-го порядка
    private static final double[] B4 = {
        35.0/384, 0.0, 500.0/1113, 125.0/192, -2187.0/6784, 11.0/84, 0.0
    };
    
    private static final double[] A = {
        1.0/5,                     // a10
        3.0/40, 9.0/40,            // a20, a21
        44.0/45, -56.0/15, 32.0/9, // a30-a32
        19372.0/6561, -25360.0/2187, 64448.0/6561, -212.0/729, // a40-a43
        9017.0/3168, -355.0/33, 46732.0/5247, 49.0/176, -5103.0/18656, // a50-a54
        35.0/384, 0.0, 500.0/1113, 125.0/192, -2187.0/6784, 11.0/84 // a60-a65
    };
    
    private final int order;
        
    /**
     * Конструктор метода.
     *
     * @param calculator вычислитель правых частей
     * @param order порядок метода (4 или 5)
     */
    public DOPRI5(RightCalculator calculator, int order) {
        super(calculator, C, (order == 4) ? B4 : B5, A);
        
                if (order != 4 && order != 5) {
            throw new IllegalArgumentException(
                "Недопустимый порядок метода. Допустимые значения: 7 или 8"
            );
        }
        this.order = order;
    }
    
    /**
     * Возвращает порядок метода.
     * 
     * @return 4 для решения-спутника, 5 для основного решения
     */
    public int getOrder() {
        return order;
    }
}